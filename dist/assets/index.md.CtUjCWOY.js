import{_ as t,c as a,o,ae as n}from"./chunks/framework.DYYkf9m7.js";const g=JSON.parse('{"title":"Lingua Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),i={name:"index.md"};function r(s,e,l,d,u,c){return o(),a("div",null,e[0]||(e[0]=[n('<h1 id="lingua-documentation" tabindex="-1">Lingua Documentation <a class="header-anchor" href="#lingua-documentation" aria-label="Permalink to &quot;Lingua Documentation&quot;">​</a></h1><p>Welcome to the official documentation for the <strong>Lingua</strong> project.</p><p>Lingua is a powerful and flexible library designed to seamlessly integrate the Laravel translation system with modern frontend frameworks like React, Vue, and Svelte. It provides a shared core for translation logic and dedicated packages for each framework, ensuring a smooth development experience for building localized applications.</p><p>Whether you are building a new application or integrating Lingua into an existing one, this documentation will guide you through the process.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li><strong>Framework Agnostic Core:</strong> Core translation logic independent of any specific frontend framework.</li><li><strong>Frontend Integrations:</strong> Easy-to-use packages for popular frameworks (React, Vue, Svelte).</li><li><strong>Laravel Compatibility:</strong> Designed to work effortlessly with Laravel&#39;s translation files.</li><li><strong>Pluralization Support:</strong> Handles complex pluralization rules.</li><li><strong>Replacements:</strong> Easily substitute placeholders in your translation strings.</li></ul><p>Ready to get started?</p>',7)]))}const f=t(i,[["render",r]]);export{g as __pageData,f as default};
